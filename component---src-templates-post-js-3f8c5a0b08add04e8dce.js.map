{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/siteConfig.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/common/Layout.js","webpack:///./src/components/common/PostCard.js","webpack:///./src/components/common/Pagination.js","webpack:///./src/components/common/Navigation.js","webpack:///./src/components/common/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMeta.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/AuthorMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","postQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_common__WEBPACK_IMPORTED_MODULE_2__","_components_common_meta__WEBPACK_IMPORTED_MODULE_3__","prismjs_components_prism_core__WEBPACK_IMPORTED_MODULE_4__","prismjs_components_prism_core__WEBPACK_IMPORTED_MODULE_4___default","Post","_ref","data","location","post","ghostPost","useLayoutEffect","Prism","highlightAll","html","a","createElement","Fragment","type","className","feature_image","src","alt","title","dangerouslySetInnerHTML","__html","propTypes","PropTypes","shape","string","isRequired","object","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","func","module","exports","siteUrl","postsPerPage","siteTitleMeta","siteDescriptionMeta","shareImageWidth","shareImageHeight","shortTitle","siteIcon","backgroundColor","themeColor","m","require","default","DefaultLayout","bodyClass","isHome","site","allGhostSettings","edges","node","twitterUrl","twitter","replace","facebookUrl","facebook","react_default","Helmet_default","lang","logo","gatsby_browser_entry","to","href","target","rel","config","description","common_Navigation","navigation","navClass","bool","DefaultLayoutSettingsQuery","Layout_DefaultLayout","Object","assign","_275539649","PostCard","url","slug","readingTime","readingTimeHelper","style","backgroundImage","tags","lib","visibility","autolink","featured","excerpt","primary_author","profile_image","name","arrayOf","Pagination","pageContext","previousPagePath","nextPagePath","humanPageNumber","numberOfPages","role","Navigation","map","navItem","i","match","key","label","defaultProps","Layout","common_PostCard","common_Pagination","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","getAuthorProperties","primaryAuthor","authorProfiles","push","website","_","compact","sameAsArray","length","join","image","fetchAuthorData","ImageMeta","content","property","ArticleMetaGhost","settings","canonical","author","publicTags","tagsHelper","fn","tag","primaryTag","shareImage","get","publisherLogo","resolve","meta_title","meta_description","og_title","og_description","published_at","updated_at","keyword","twitter_title","twitter_description","meta_ImageMeta","ArticleMetaQuery","ArticleMeta_ArticleMetaGhost","_1004981455","WebsiteMeta","bio","oneOf","WebsiteMetaQuery","WebsiteMeta_WebsiteMeta","_3093436507","AuthorMeta","AuthorMetaQuery","AuthorMeta_AuthorMeta","_4112685740","MetaData","ghostTag","ghostAuthor","ghostPage","ArticleMeta","meta_WebsiteMeta","meta_AuthorMeta","cover_image","MetaDataQuery","MetaData_MetaData","_2233248733","meta_MetaData"],"mappings":"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","file":"component---src-templates-post-js-3f8c5a0b08add04e8dce.js","sourcesContent":["import React, { useLayoutEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport { Layout } from '../components/common';\nimport { MetaData } from '../components/common/meta';\n\nimport Prism from 'prismjs';\n\n/**\n * Single post view (/:slug)\n *\n * This file renders a single post and loads all the content.\n *\n */\nconst Post = ({ data, location }) => {\n  const post = data.ghostPost;\n\n  useLayoutEffect(() => {\n    Prism.highlightAll();\n  }, [post.html]);\n\n  return (\n    <>\n      <MetaData data={data} location={location} type=\"article\" />\n      <Layout>\n        <div className=\"container\">\n          <article className=\"content\">\n            {post.feature_image ? (\n              <figure className=\"post-feature-image\">\n                <img src={post.feature_image} alt={post.title} />\n              </figure>\n            ) : null}\n            <section className=\"post-full-content\">\n              <h1 className=\"content-title\">{post.title}</h1>\n\n              {/* The main post content */}\n              <section className=\"content-body load-external-scripts\" dangerouslySetInnerHTML={{ __html: post.html }} />\n            </section>\n          </article>\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nPost.propTypes = {\n  data: PropTypes.shape({\n    ghostPost: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      html: PropTypes.string.isRequired,\n      feature_image: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default Post;\n\nexport const postQuery = graphql`\n  query($slug: String!) {\n    ghostPost(slug: { eq: $slug }) {\n      ...GhostPostFields\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","module.exports = {\n    siteUrl: `crashtestdev.com`, // Site domain. Do not include a trailing slash!\n\n    postsPerPage: 12, // Number of posts shown on paginated pages (changes this requires sometimes to delete the cache)\n\n    siteTitleMeta: `Crash test developer`, // This allows an alternative site title for meta data for pages.\n    siteDescriptionMeta: `Ken Chau's blog about crash testing different developer things`, // This allows an alternative site description for meta data for pages.\n\n    shareImageWidth: 1000, // Change to the width of your default share image\n    shareImageHeight: 523, // Change to the height of your default share image\n\n    shortTitle: `CrashTestDev`, // Used for App manifest e.g. Mobile Home Screen\n    siteIcon: `favicon.png`, // Logo in /static dir used for SEO, RSS, and App manifest\n    backgroundColor: `#e9e9e9`, // Used for Offline Manifest\n    themeColor: `#15171A` // Used for Offline Manifest\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport { Navigation } from '.';\nimport config from '../../utils/siteConfig';\n\n// Styles\nimport '../../styles/app.css';\n\n/**\n * Main layout component\n *\n * The Layout component wraps around each page and template.\n * It also provides the header, footer as well as the main\n * styles, and meta data for each page.\n *\n */\nconst DefaultLayout = ({ data, children, bodyClass, isHome }) => {\n    const site = data.allGhostSettings.edges[0].node;\n    const twitterUrl = site.twitter ? `https://twitter.com/${site.twitter.replace(/^@/, ``)}` : null;\n    const facebookUrl = site.facebook ? `https://www.facebook.com/${site.facebook.replace(/^\\//, ``)}` : null;\n\n    return (\n        <>\n            <Helmet>\n                <html lang={site.lang} />\n                <body className={bodyClass} />\n            </Helmet>\n\n            <div className=\"viewport\">\n                <div className=\"viewport-top\">\n                    {/* The main header section on top of the screen */}\n                    <header className=\"site-head\">\n                        <div className=\"container\">\n                            <div className=\"site-mast\">\n                                <div className=\"site-mast-left\">\n                                    {site.logo ? (\n                                        <Link to=\"/\">\n                                            <img className=\"site-logo\" src={site.logo} alt={site.title} />\n                                        </Link>\n                                    ) : null}\n                                </div>\n                                <div className=\"site-mast-right\">\n                                    {site.twitter && (\n                                        <a href={twitterUrl} className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <img className=\"site-nav-icon\" src=\"/images/icons/twitter.svg\" alt=\"Twitter\" />\n                                        </a>\n                                    )}\n                                    {site.facebook && (\n                                        <a href={facebookUrl} className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <img className=\"site-nav-icon\" src=\"/images/icons/facebook.svg\" alt=\"Facebook\" />\n                                        </a>\n                                    )}\n                                    <a\n                                        className=\"site-nav-item\"\n                                        href={`https://feedly.com/i/subscription/feed/${config.siteUrl}/rss/`}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        <img className=\"site-nav-icon\" src=\"/images/icons/rss.svg\" alt=\"RSS Feed\" />\n                                    </a>\n                                </div>\n                            </div>\n                            {isHome ? (\n                                <div className=\"site-banner\">\n                                    <h1 className=\"site-banner-title\">{site.title}</h1>\n                                    <p className=\"site-banner-desc\">{site.description}</p>\n                                </div>\n                            ) : null}\n                            <nav className=\"site-nav\">\n                                <div className=\"site-nav-left\">\n                                    {/* The navigation items as setup in Ghost */}\n                                    <Navigation data={site.navigation} navClass=\"site-nav-item\" />\n                                </div>\n                            </nav>\n                        </div>\n                    </header>\n\n                    <main className=\"site-main\">\n                        {/* All the main content gets inserted here, index.js, post.js */}\n                        {children}\n                    </main>\n                </div>\n\n                <div className=\"viewport-bottom\">\n                    {/* The footer at the very bottom of the screen */}\n                    <footer className=\"site-foot\">\n                        <div className=\"site-foot-nav container\">\n                            <div className=\"site-foot-nav-left\">\n                                <Link to=\"/\">{site.title}</Link> © 2019 &mdash; Published with{' '}\n                                <a className=\"site-foot-nav-item\" href=\"https://ghost.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    Ghost\n                                </a>\n                            </div>\n                            <div className=\"site-foot-nav-right\">\n                                <Navigation data={site.navigation} navClass=\"site-foot-nav-item\" />\n                            </div>\n                        </div>\n                    </footer>\n                </div>\n            </div>\n        </>\n    );\n};\n\nDefaultLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n    bodyClass: PropTypes.string,\n    isHome: PropTypes.bool,\n    data: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired\n    }).isRequired\n};\n\nconst DefaultLayoutSettingsQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettings {\n                allGhostSettings {\n                    edges {\n                        node {\n                            ...GhostSettingsFields\n                        }\n                    }\n                }\n                file(relativePath: { eq: \"ghost-icon.png\" }) {\n                    childImageSharp {\n                        fixed(width: 30, height: 30) {\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <DefaultLayout data={data} {...props} />}\n    />\n);\n\nexport default DefaultLayoutSettingsQuery;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { Tags } from '@tryghost/helpers-gatsby'\nimport { readingTime as readingTimeHelper } from '@tryghost/helpers'\n\nconst PostCard = ({ post }) => {\n    const url = `/${post.slug}/`\n    const readingTime = readingTimeHelper(post)\n\n    return (\n        <Link to={url} className=\"post-card\">\n            <header className=\"post-card-header\">\n                {post.feature_image &&\n                    <div className=\"post-card-image\" style={{\n                        backgroundImage: `url(${post.feature_image})` ,\n                    }}></div>}\n                {post.tags && <div className=\"post-card-tags\"> <Tags post={post} visibility=\"public\" autolink={false} /></div>}\n                {post.featured && <span>Featured</span>}\n                <h2 className=\"post-card-title\">{post.title}</h2>\n            </header>\n            <section className=\"post-card-excerpt\">{post.excerpt}</section>\n            <footer className=\"post-card-footer\">\n                <div className=\"post-card-footer-left\">\n                    <div className=\"post-card-avatar\">\n                        {post.primary_author.profile_image ?\n                            <img className=\"author-profile-image\" src={post.primary_author.profile_image} alt={post.primary_author.name}/> :\n                            <img className=\"default-avatar\" src=\"/images/icons/avatar.svg\" alt={post.primary_author.name}/>\n                        }\n                    </div>\n                    <span>{ post.primary_author.name }</span>\n                </div>\n                <div className=\"post-card-footer-right\">\n                    <div>{readingTime}</div>\n                </div>\n            </footer>\n        </Link>\n    )\n}\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        feature_image: PropTypes.string,\n        featured: PropTypes.bool,\n        tags: PropTypes.arrayOf(\n            PropTypes.shape({\n                name: PropTypes.string,\n            })\n        ),\n        excerpt: PropTypes.string.isRequired,\n        primary_author: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            profile_image: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n}\n\nexport default PostCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nconst Pagination = ({ pageContext }) => {\n    const { previousPagePath, nextPagePath, humanPageNumber, numberOfPages } = pageContext\n\n    return (\n        <nav className=\"pagination\" role=\"navigation\">\n            <div>\n                {previousPagePath && (\n\n                    <Link to={previousPagePath} rel=\"prev\">\n                            Previous\n                    </Link>\n\n                )}\n            </div>\n            {numberOfPages > 1 && <div className=\"pagination-location\">Page {humanPageNumber} of {numberOfPages}</div>}\n            <div>\n                {nextPagePath && (\n\n                    <Link to={nextPagePath} rel=\"next\">\n                            Next\n                    </Link>\n                )}\n            </div>\n        </nav>\n    )\n}\n\nPagination.propTypes = {\n    pageContext: PropTypes.object.isRequired,\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\n/**\n* Navigation component\n*\n* The Navigation component takes an array of your Ghost\n* navigation property that is fetched from the settings.\n* It differentiates between absolute (external) and relative link (internal).\n* You can pass it a custom class for your own styles, but it will always fallback\n* to a `site-nav-item` class.\n*\n*/\nconst Navigation = ({ data, navClass }) => (\n    <>\n        {data.map((navItem, i) => {\n            if (navItem.url.match(/^\\s?http(s?)/gi)) {\n                return <a className={navClass} href={navItem.url} key={i} target=\"_blank\" rel=\"noopener noreferrer\">{navItem.label}</a>\n            } else {\n                return <Link className={navClass} to={navItem.url} key={i}>{navItem.label}</Link>\n            }\n        })}\n    </>\n)\n\nNavigation.defaultProps = {\n    navClass: `site-nav-item`,\n}\n\nNavigation.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            label: PropTypes.string.isRequired,\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n    navClass: PropTypes.string,\n}\n\nexport default Navigation\n","export { default as Layout } from './Layout';\nexport { default as PostCard } from './PostCard';\nexport { default as Pagination } from './Pagination';\nexport { default as Navigation } from './Navigation';\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor) => {\n    let authorProfiles = []\n\n    authorProfiles.push(\n        primaryAuthor.website ? primaryAuthor.website : null,\n        primaryAuthor.twitter ? `https://twitter.com/${primaryAuthor.twitter.replace(/^@/, ``)}/` : null,\n        primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook.replace(/^\\//, ``)}/` : null\n    )\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: primaryAuthor.name || null,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: primaryAuthor.profile_image || null,\n        facebookUrl: primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook.replace(/^\\//, ``)}/` : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport config from '../../../utils/siteConfig'\n\nconst ImageMeta = ({ image }) => {\n    if (!image) {\n        return null\n    }\n\n    return (\n        <Helmet>\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            <meta name=\"twitter:image\" content={image} />\n            <meta property=\"og:image\" content={image} />\n            <meta property=\"og:image:width\" content={config.shareImageWidth} />\n            <meta property=\"og:image:height\" content={config.shareImageHeight} />\n        </Helmet >\n    )\n}\n\nImageMeta.propTypes = {\n    image: PropTypes.string,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport url from 'url'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\nimport config from '../../../utils/siteConfig'\n\nimport { tags as tagsHelper } from '@tryghost/helpers'\n\nconst ArticleMetaGhost = ({ data, settings, canonical }) => {\n    const ghostPost = data\n    settings = settings.allGhostSettings.edges[0].node\n\n    const author = getAuthorProperties(ghostPost.primary_author)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || ``\n    const shareImage = ghostPost.feature_image ? ghostPost.feature_image : _.get(settings, `cover_image`, null)\n    const publisherLogo = (settings.logo || config.siteIcon) ? url.resolve(config.siteUrl, (settings.logo || config.siteIcon)) : null\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.meta_title || ghostPost.title}</title>\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={settings.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        ghostPost.og_title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        ghostPost.og_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                {author.facebookUrl && <meta property=\"article:author\" content={author.facebookUrl} />}\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                {primaryTag && <meta name=\"twitter:label2\" content=\"Filed under\" />}\n                {primaryTag && <meta name=\"twitter:data2\" content={primaryTag} />}\n\n                {settings.twitter && <meta name=\"twitter:site\" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}\n                {settings.twitter && <meta name=\"twitter:creator\" content={settings.twitter} />}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.meta_title || ghostPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.published_at}\",\n                        \"dateModified\": \"${ghostPost.updated_at}\",\n                        ${shareImage ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },` : ``}\n                        \"publisher\": {\n                            \"@type\": \"Organization\",\n                            \"name\": \"${settings.title}\",\n                            \"logo\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${publisherLogo}\",\n                                \"width\": 60,\n                                \"height\": 60\n                            }\n                        },\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        published_at: PropTypes.string.isRequired,\n        updated_at: PropTypes.string.isRequired,\n        meta_title: PropTypes.string,\n        meta_description: PropTypes.string,\n        primary_author: PropTypes.object.isRequired,\n        feature_image: PropTypes.string,\n        tags: PropTypes.arrayOf(\n            PropTypes.shape({\n                name: PropTypes.string,\n                slug: PropTypes.string,\n                visibility: PropTypes.string,\n            })\n        ),\n        primaryTag: PropTypes.shape({\n            name: PropTypes.string,\n        }),\n        og_title: PropTypes.string,\n        og_description: PropTypes.string,\n        twitter_title: PropTypes.string,\n        twitter_description: PropTypes.string,\n        excerpt: PropTypes.string.isRequired,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nconst ArticleMetaQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettingsArticleMeta {\n                allGhostSettings {\n                    edges {\n                        node {\n                            ...GhostSettingsFields\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <ArticleMetaGhost settings={data} {...props} />}\n    />\n)\n\nexport default ArticleMetaQuery\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { StaticQuery, graphql } from 'gatsby'\nimport url from 'url'\n\nimport ImageMeta from './ImageMeta'\nimport config from '../../../utils/siteConfig'\n\nconst WebsiteMeta = ({ data, settings, canonical, title, description, image, type }) => {\n    settings = settings.allGhostSettings.edges[0].node\n\n    const publisherLogo = url.resolve(config.siteUrl, (settings.logo || config.siteIcon))\n    let shareImage = image || data.feature_image || _.get(settings, `cover_image`, null)\n\n    shareImage = shareImage ? url.resolve(config.siteUrl, shareImage) : null\n\n    description = description || data.meta_description || data.description || config.siteDescriptionMeta || settings.description\n    title = `${title || data.meta_title || data.name || data.title} - ${settings.title}`\n\n    return (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={settings.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                {settings.twitter && <meta name=\"twitter:site\" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}\n                {settings.twitter && <meta name=\"twitter:creator\" content={settings.twitter} />}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"${type}\",\n                        \"url\": \"${canonical}\",\n                        ${shareImage ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },` : ``}\n                        \"publisher\": {\n                            \"@type\": \"Organization\",\n                            \"name\": \"${settings.title}\",\n                            \"logo\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${publisherLogo}\",\n                                \"width\": 60,\n                                \"height\": 60\n                            }\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        feature_image: PropTypes.string,\n        description: PropTypes.string,\n        bio: PropTypes.string,\n        profile_image: PropTypes.string,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    type: PropTypes.oneOf([`WebSite`, `Series`]).isRequired,\n}\n\nconst WebsiteMetaQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettingsWebsiteMeta {\n                allGhostSettings {\n                    edges {\n                        node {\n                            ...GhostSettingsFields\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <WebsiteMeta settings={data} {...props} />}\n    />\n)\n\nexport default WebsiteMetaQuery\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport ImageMeta from './ImageMeta'\nimport getAuthorProperties from './getAuthorProperties'\nimport config from '../../../utils/siteConfig'\n\nconst AuthorMeta = ({ data, settings, canonical }) => {\n    settings = settings.allGhostSettings.edges[0].node\n\n    const author = getAuthorProperties(data)\n    const shareImage = author.image || _.get(settings, `cover_image`, null)\n    const title = `${data.name} - ${settings.title}`\n    const description = data.bio || config.siteDescriptionMeta || settings.description\n\n    return (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={settings.title} />\n                <meta property=\"og:type\" content=\"profile\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                {settings.twitter && <meta name=\"twitter:site\" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}\n                {settings.twitter && <meta name=\"twitter:creator\" content={settings.twitter} />}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Person\",\n                        \"name\": \"${data.name}\",\n                        ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray},` : ``}\n                        \"url\": \"${canonical}\",\n                        ${shareImage ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },` : ``}\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nAuthorMeta.propTypes = {\n    data: PropTypes.shape({\n        name: PropTypes.string,\n        bio: PropTypes.string,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nconst AuthorMetaQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettingsAuthorMeta {\n                allGhostSettings {\n                    edges {\n                        node {\n                            ...GhostSettingsFields\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <AuthorMeta settings={data} {...props} />}\n    />\n)\n\nexport default AuthorMetaQuery\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport url from 'url'\n\nimport config from '../../../utils/siteConfig'\nimport ArticleMeta from './ArticleMeta'\nimport WebsiteMeta from './WebsiteMeta'\nimport AuthorMeta from './AuthorMeta'\n\n/**\n* MetaData will generate all relevant meta data information incl.\n* JSON-LD (schema.org), Open Graph (Facebook) and Twitter properties.\n*\n*/\nconst MetaData = ({\n    data,\n    settings,\n    title,\n    description,\n    image,\n    location,\n}) => {\n    const canonical = url.resolve(config.siteUrl, location.pathname, `/`)\n    const { ghostPost, ghostTag, ghostAuthor, ghostPage } = data\n    settings = settings.allGhostSettings.edges[0].node\n\n    if (ghostPost) {\n        return (\n            <ArticleMeta\n                data={ghostPost}\n                canonical={canonical}\n            />\n        )\n    } else if (ghostTag) {\n        return (\n            <WebsiteMeta\n                data={ghostTag}\n                canonical={canonical}\n                type=\"Series\"\n            />\n        )\n    } else if (ghostAuthor) {\n        return (\n            <AuthorMeta\n                data={ghostAuthor}\n                canonical={canonical}\n            />\n        )\n    } else if (ghostPage) {\n        return (\n            <WebsiteMeta\n                data={ghostPage}\n                canonical={canonical}\n                type=\"WebSite\"\n            />\n        )\n    } else {\n        title = title || config.siteTitleMeta || settings.title\n        description = description || config.siteDescriptionMeta || settings.description\n        image = image || settings.cover_image || null\n\n        image = image ? url.resolve(config.siteUrl, image) : null\n\n        return (\n            <WebsiteMeta\n                data={{}}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type=\"WebSite\"\n            />\n        )\n    }\n}\n\nMetaData.defaultProps = {\n    data: {},\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.object,\n        ghostTag: PropTypes.object,\n        ghostAuthor: PropTypes.object,\n        ghostPage: PropTypes.object,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n}\n\nconst MetaDataQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettingsMetaData {\n                allGhostSettings {\n                    edges {\n                        node {\n                            title\n                            description\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <MetaData settings={data} {...props} />}\n    />\n)\n\nexport default MetaDataQuery\n","export { default as MetaData } from './MetaData'\n"],"sourceRoot":""}