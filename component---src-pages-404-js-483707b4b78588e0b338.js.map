{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/siteConfig.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/common/Layout.js","webpack:///./src/components/common/PostCard.js","webpack:///./src/components/common/Pagination.js","webpack:///./src/components/common/Navigation.js","webpack:///./src/components/common/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_common__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","className","style","textAlign","to","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","module","exports","siteUrl","postsPerPage","siteTitleMeta","siteDescriptionMeta","shareImageWidth","shareImageHeight","shortTitle","siteIcon","backgroundColor","themeColor","m","require","default","DefaultLayout","_ref","bodyClass","isHome","site","allGhostSettings","edges","node","twitterUrl","twitter","replace","facebookUrl","facebook","react_default","Fragment","Helmet_default","lang","logo","gatsby_browser_entry","src","alt","title","href","target","rel","config","description","common_Navigation","navigation","navClass","bool","shape","DefaultLayoutSettingsQuery","Layout_DefaultLayout","Object","assign","_275539649","PostCard","post","url","slug","readingTime","readingTimeHelper","feature_image","backgroundImage","tags","lib","visibility","autolink","featured","excerpt","primary_author","profile_image","name","arrayOf","Pagination","pageContext","previousPagePath","nextPagePath","humanPageNumber","numberOfPages","role","Navigation","map","navItem","i","match","key","label","defaultProps","Layout","common_PostCard","common_Pagination","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json"],"mappings":"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","file":"component---src-pages-404-js-483707b4b78588e0b338.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { Layout } from '../components/common'\n\nconst NotFoundPage = () => (\n    <Layout>\n        <div className=\"container\">\n            <article className=\"content\" style={{ textAlign: `center` }}>\n                <h1 className=\"content-title\">Error 404</h1>\n                <section className=\"content-body\">\n                    Page not found, <Link to=\"/\">return home</Link> to start over\n                </section>\n            </article>\n        </div>\n    </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","module.exports = {\n    siteUrl: `crashtestdev.com`, // Site domain. Do not include a trailing slash!\n\n    postsPerPage: 12, // Number of posts shown on paginated pages (changes this requires sometimes to delete the cache)\n\n    siteTitleMeta: `Crash test developer`, // This allows an alternative site title for meta data for pages.\n    siteDescriptionMeta: `Ken Chau's blog about crash testing different developer things`, // This allows an alternative site description for meta data for pages.\n\n    shareImageWidth: 1000, // Change to the width of your default share image\n    shareImageHeight: 523, // Change to the height of your default share image\n\n    shortTitle: `CrashTestDev`, // Used for App manifest e.g. Mobile Home Screen\n    siteIcon: `favicon.png`, // Logo in /static dir used for SEO, RSS, and App manifest\n    backgroundColor: `#e9e9e9`, // Used for Offline Manifest\n    themeColor: `#15171A` // Used for Offline Manifest\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport { Navigation } from '.';\nimport config from '../../utils/siteConfig';\n\n// Styles\nimport '../../styles/app.css';\n\n/**\n * Main layout component\n *\n * The Layout component wraps around each page and template.\n * It also provides the header, footer as well as the main\n * styles, and meta data for each page.\n *\n */\nconst DefaultLayout = ({ data, children, bodyClass, isHome }) => {\n    const site = data.allGhostSettings.edges[0].node;\n    const twitterUrl = site.twitter ? `https://twitter.com/${site.twitter.replace(/^@/, ``)}` : null;\n    const facebookUrl = site.facebook ? `https://www.facebook.com/${site.facebook.replace(/^\\//, ``)}` : null;\n\n    return (\n        <>\n            <Helmet>\n                <html lang={site.lang} />\n                <body className={bodyClass} />\n            </Helmet>\n\n            <div className=\"viewport\">\n                <div className=\"viewport-top\">\n                    {/* The main header section on top of the screen */}\n                    <header className=\"site-head\">\n                        <div className=\"container\">\n                            <div className=\"site-mast\">\n                                <div className=\"site-mast-left\">\n                                    {site.logo ? (\n                                        <Link to=\"/\">\n                                            <img className=\"site-logo\" src={site.logo} alt={site.title} />\n                                        </Link>\n                                    ) : null}\n                                </div>\n                                <div className=\"site-mast-right\">\n                                    {site.twitter && (\n                                        <a href={twitterUrl} className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <img className=\"site-nav-icon\" src=\"/images/icons/twitter.svg\" alt=\"Twitter\" />\n                                        </a>\n                                    )}\n                                    {site.facebook && (\n                                        <a href={facebookUrl} className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <img className=\"site-nav-icon\" src=\"/images/icons/facebook.svg\" alt=\"Facebook\" />\n                                        </a>\n                                    )}\n                                    <a\n                                        className=\"site-nav-item\"\n                                        href={`https://feedly.com/i/subscription/feed/${config.siteUrl}/rss/`}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        <img className=\"site-nav-icon\" src=\"/images/icons/rss.svg\" alt=\"RSS Feed\" />\n                                    </a>\n                                </div>\n                            </div>\n                            {isHome ? (\n                                <div className=\"site-banner\">\n                                    <h1 className=\"site-banner-title\">{site.title}</h1>\n                                    <p className=\"site-banner-desc\">{site.description}</p>\n                                </div>\n                            ) : null}\n                            <nav className=\"site-nav\">\n                                <div className=\"site-nav-left\">\n                                    {/* The navigation items as setup in Ghost */}\n                                    <Navigation data={site.navigation} navClass=\"site-nav-item\" />\n                                </div>\n                            </nav>\n                        </div>\n                    </header>\n\n                    <main className=\"site-main\">\n                        {/* All the main content gets inserted here, index.js, post.js */}\n                        {children}\n                    </main>\n                </div>\n\n                <div className=\"viewport-bottom\">\n                    {/* The footer at the very bottom of the screen */}\n                    <footer className=\"site-foot\">\n                        <div className=\"site-foot-nav container\">\n                            <div className=\"site-foot-nav-left\">\n                                <Link to=\"/\">{site.title}</Link> © 2019 &mdash; Published with{' '}\n                                <a className=\"site-foot-nav-item\" href=\"https://ghost.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    Ghost\n                                </a>\n                            </div>\n                            <div className=\"site-foot-nav-right\">\n                                <Navigation data={site.navigation} navClass=\"site-foot-nav-item\" />\n                            </div>\n                        </div>\n                    </footer>\n                </div>\n            </div>\n        </>\n    );\n};\n\nDefaultLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n    bodyClass: PropTypes.string,\n    isHome: PropTypes.bool,\n    data: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired\n    }).isRequired\n};\n\nconst DefaultLayoutSettingsQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettings {\n                allGhostSettings {\n                    edges {\n                        node {\n                            ...GhostSettingsFields\n                        }\n                    }\n                }\n                file(relativePath: { eq: \"ghost-icon.png\" }) {\n                    childImageSharp {\n                        fixed(width: 30, height: 30) {\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <DefaultLayout data={data} {...props} />}\n    />\n);\n\nexport default DefaultLayoutSettingsQuery;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { Tags } from '@tryghost/helpers-gatsby'\nimport { readingTime as readingTimeHelper } from '@tryghost/helpers'\n\nconst PostCard = ({ post }) => {\n    const url = `/${post.slug}/`\n    const readingTime = readingTimeHelper(post)\n\n    return (\n        <Link to={url} className=\"post-card\">\n            <header className=\"post-card-header\">\n                {post.feature_image &&\n                    <div className=\"post-card-image\" style={{\n                        backgroundImage: `url(${post.feature_image})` ,\n                    }}></div>}\n                {post.tags && <div className=\"post-card-tags\"> <Tags post={post} visibility=\"public\" autolink={false} /></div>}\n                {post.featured && <span>Featured</span>}\n                <h2 className=\"post-card-title\">{post.title}</h2>\n            </header>\n            <section className=\"post-card-excerpt\">{post.excerpt}</section>\n            <footer className=\"post-card-footer\">\n                <div className=\"post-card-footer-left\">\n                    <div className=\"post-card-avatar\">\n                        {post.primary_author.profile_image ?\n                            <img className=\"author-profile-image\" src={post.primary_author.profile_image} alt={post.primary_author.name}/> :\n                            <img className=\"default-avatar\" src=\"/images/icons/avatar.svg\" alt={post.primary_author.name}/>\n                        }\n                    </div>\n                    <span>{ post.primary_author.name }</span>\n                </div>\n                <div className=\"post-card-footer-right\">\n                    <div>{readingTime}</div>\n                </div>\n            </footer>\n        </Link>\n    )\n}\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        feature_image: PropTypes.string,\n        featured: PropTypes.bool,\n        tags: PropTypes.arrayOf(\n            PropTypes.shape({\n                name: PropTypes.string,\n            })\n        ),\n        excerpt: PropTypes.string.isRequired,\n        primary_author: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            profile_image: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n}\n\nexport default PostCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nconst Pagination = ({ pageContext }) => {\n    const { previousPagePath, nextPagePath, humanPageNumber, numberOfPages } = pageContext\n\n    return (\n        <nav className=\"pagination\" role=\"navigation\">\n            <div>\n                {previousPagePath && (\n\n                    <Link to={previousPagePath} rel=\"prev\">\n                            Previous\n                    </Link>\n\n                )}\n            </div>\n            {numberOfPages > 1 && <div className=\"pagination-location\">Page {humanPageNumber} of {numberOfPages}</div>}\n            <div>\n                {nextPagePath && (\n\n                    <Link to={nextPagePath} rel=\"next\">\n                            Next\n                    </Link>\n                )}\n            </div>\n        </nav>\n    )\n}\n\nPagination.propTypes = {\n    pageContext: PropTypes.object.isRequired,\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\n/**\n* Navigation component\n*\n* The Navigation component takes an array of your Ghost\n* navigation property that is fetched from the settings.\n* It differentiates between absolute (external) and relative link (internal).\n* You can pass it a custom class for your own styles, but it will always fallback\n* to a `site-nav-item` class.\n*\n*/\nconst Navigation = ({ data, navClass }) => (\n    <>\n        {data.map((navItem, i) => {\n            if (navItem.url.match(/^\\s?http(s?)/gi)) {\n                return <a className={navClass} href={navItem.url} key={i} target=\"_blank\" rel=\"noopener noreferrer\">{navItem.label}</a>\n            } else {\n                return <Link className={navClass} to={navItem.url} key={i}>{navItem.label}</Link>\n            }\n        })}\n    </>\n)\n\nNavigation.defaultProps = {\n    navClass: `site-nav-item`,\n}\n\nNavigation.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            label: PropTypes.string.isRequired,\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n    navClass: PropTypes.string,\n}\n\nexport default Navigation\n","export { default as Layout } from './Layout';\nexport { default as PostCard } from './PostCard';\nexport { default as Pagination } from './Pagination';\nexport { default as Navigation } from './Navigation';\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}