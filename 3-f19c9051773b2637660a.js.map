{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/siteConfig.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/common/Layout.js","webpack:///./src/components/common/PostCard.js","webpack:///./src/components/common/Pagination.js","webpack:///./src/components/common/Navigation.js","webpack:///./src/components/common/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMeta.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/AuthorMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/index.js"],"names":["__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","StaticQueryContext","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","module","exports","siteUrl","postsPerPage","siteTitleMeta","siteDescriptionMeta","shareImageWidth","shareImageHeight","shortTitle","siteIcon","backgroundColor","themeColor","m","require","default","DefaultLayout","_ref","bodyClass","isHome","site","allGhostSettings","edges","node","twitterUrl","twitter","replace","facebookUrl","facebook","react_default","Fragment","Helmet_default","lang","className","logo","gatsby_browser_entry","to","src","alt","title","href","target","rel","config","description","common_Navigation","navigation","navClass","bool","shape","DefaultLayoutSettingsQuery","Layout_DefaultLayout","Object","assign","_275539649","PostCard","post","url","slug","readingTime","readingTimeHelper","feature_image","style","backgroundImage","tags","lib","visibility","autolink","featured","excerpt","primary_author","profile_image","name","arrayOf","Pagination","pageContext","previousPagePath","nextPagePath","humanPageNumber","numberOfPages","role","Navigation","map","navItem","i","match","key","label","defaultProps","Layout","common_PostCard","common_Pagination","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","getAuthorProperties","primaryAuthor","authorProfiles","push","website","_","compact","sameAsArray","length","join","image","fetchAuthorData","ImageMeta","content","property","ArticleMetaGhost","settings","canonical","ghostPost","author","publicTags","tagsHelper","fn","tag","primaryTag","shareImage","get","publisherLogo","resolve","meta_title","meta_description","og_title","og_description","published_at","updated_at","keyword","twitter_title","twitter_description","type","meta_ImageMeta","ArticleMetaQuery","ArticleMeta_ArticleMetaGhost","_1004981455","WebsiteMeta","bio","oneOf","WebsiteMetaQuery","WebsiteMeta_WebsiteMeta","_3093436507","AuthorMeta","AuthorMetaQuery","AuthorMeta_AuthorMeta","_4112685740","MetaData","ghostTag","ghostAuthor","ghostPage","ArticleMeta","meta_WebsiteMeta","meta_AuthorMeta","cover_image","MetaDataQuery","MetaData_MetaData","_2233248733","meta_MetaData"],"mappings":"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","file":"3-f19c9051773b2637660a.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","module.exports = {\n    siteUrl: `crashtestdev.com`, // Site domain. Do not include a trailing slash!\n\n    postsPerPage: 12, // Number of posts shown on paginated pages (changes this requires sometimes to delete the cache)\n\n    siteTitleMeta: `Crash test developer`, // This allows an alternative site title for meta data for pages.\n    siteDescriptionMeta: `Ken Chau's blog about crash testing different developer things`, // This allows an alternative site description for meta data for pages.\n\n    shareImageWidth: 1000, // Change to the width of your default share image\n    shareImageHeight: 523, // Change to the height of your default share image\n\n    shortTitle: `CrashTestDev`, // Used for App manifest e.g. Mobile Home Screen\n    siteIcon: `favicon.png`, // Logo in /static dir used for SEO, RSS, and App manifest\n    backgroundColor: `#e9e9e9`, // Used for Offline Manifest\n    themeColor: `#15171A` // Used for Offline Manifest\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport { Navigation } from '.';\nimport config from '../../utils/siteConfig';\n\n// Styles\nimport '../../styles/app.css';\n\n/**\n * Main layout component\n *\n * The Layout component wraps around each page and template.\n * It also provides the header, footer as well as the main\n * styles, and meta data for each page.\n *\n */\nconst DefaultLayout = ({ data, children, bodyClass, isHome }) => {\n    const site = data.allGhostSettings.edges[0].node;\n    const twitterUrl = site.twitter ? `https://twitter.com/${site.twitter.replace(/^@/, ``)}` : null;\n    const facebookUrl = site.facebook ? `https://www.facebook.com/${site.facebook.replace(/^\\//, ``)}` : null;\n\n    return (\n        <>\n            <Helmet>\n                <html lang={site.lang} />\n                <body className={bodyClass} />\n            </Helmet>\n\n            <div className=\"viewport\">\n                <div className=\"viewport-top\">\n                    {/* The main header section on top of the screen */}\n                    <header className=\"site-head\">\n                        <div className=\"container\">\n                            <div className=\"site-mast\">\n                                <div className=\"site-mast-left\">\n                                    {site.logo ? (\n                                        <Link to=\"/\">\n                                            <img className=\"site-logo\" src={site.logo} alt={site.title} />\n                                        </Link>\n                                    ) : null}\n                                </div>\n                                <div className=\"site-mast-right\">\n                                    {site.twitter && (\n                                        <a href={twitterUrl} className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <img className=\"site-nav-icon\" src=\"/images/icons/twitter.svg\" alt=\"Twitter\" />\n                                        </a>\n                                    )}\n                                    {site.facebook && (\n                                        <a href={facebookUrl} className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <img className=\"site-nav-icon\" src=\"/images/icons/facebook.svg\" alt=\"Facebook\" />\n                                        </a>\n                                    )}\n                                    <a\n                                        className=\"site-nav-item\"\n                                        href={`https://feedly.com/i/subscription/feed/${config.siteUrl}/rss/`}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        <img className=\"site-nav-icon\" src=\"/images/icons/rss.svg\" alt=\"RSS Feed\" />\n                                    </a>\n                                </div>\n                            </div>\n                            {isHome ? (\n                                <div className=\"site-banner\">\n                                    <h1 className=\"site-banner-title\">{site.title}</h1>\n                                    <p className=\"site-banner-desc\">{site.description}</p>\n                                </div>\n                            ) : null}\n                            <nav className=\"site-nav\">\n                                <div className=\"site-nav-left\">\n                                    {/* The navigation items as setup in Ghost */}\n                                    <Navigation data={site.navigation} navClass=\"site-nav-item\" />\n                                </div>\n                            </nav>\n                        </div>\n                    </header>\n\n                    <main className=\"site-main\">\n                        {/* All the main content gets inserted here, index.js, post.js */}\n                        {children}\n                    </main>\n                </div>\n\n                <div className=\"viewport-bottom\">\n                    {/* The footer at the very bottom of the screen */}\n                    <footer className=\"site-foot\">\n                        <div className=\"site-foot-nav container\">\n                            <div className=\"site-foot-nav-left\">\n                                <Link to=\"/\">{site.title}</Link> © 2019 &mdash; Published with{' '}\n                                <a className=\"site-foot-nav-item\" href=\"https://ghost.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    Ghost\n                                </a>\n                            </div>\n                            <div className=\"site-foot-nav-right\">\n                                <Navigation data={site.navigation} navClass=\"site-foot-nav-item\" />\n                            </div>\n                        </div>\n                    </footer>\n                </div>\n            </div>\n        </>\n    );\n};\n\nDefaultLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n    bodyClass: PropTypes.string,\n    isHome: PropTypes.bool,\n    data: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired\n    }).isRequired\n};\n\nconst DefaultLayoutSettingsQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettings {\n                allGhostSettings {\n                    edges {\n                        node {\n                            ...GhostSettingsFields\n                        }\n                    }\n                }\n                file(relativePath: { eq: \"ghost-icon.png\" }) {\n                    childImageSharp {\n                        fixed(width: 30, height: 30) {\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <DefaultLayout data={data} {...props} />}\n    />\n);\n\nexport default DefaultLayoutSettingsQuery;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { Tags } from '@tryghost/helpers-gatsby'\nimport { readingTime as readingTimeHelper } from '@tryghost/helpers'\n\nconst PostCard = ({ post }) => {\n    const url = `/${post.slug}/`\n    const readingTime = readingTimeHelper(post)\n\n    return (\n        <Link to={url} className=\"post-card\">\n            <header className=\"post-card-header\">\n                {post.feature_image &&\n                    <div className=\"post-card-image\" style={{\n                        backgroundImage: `url(${post.feature_image})` ,\n                    }}></div>}\n                {post.tags && <div className=\"post-card-tags\"> <Tags post={post} visibility=\"public\" autolink={false} /></div>}\n                {post.featured && <span>Featured</span>}\n                <h2 className=\"post-card-title\">{post.title}</h2>\n            </header>\n            <section className=\"post-card-excerpt\">{post.excerpt}</section>\n            <footer className=\"post-card-footer\">\n                <div className=\"post-card-footer-left\">\n                    <div className=\"post-card-avatar\">\n                        {post.primary_author.profile_image ?\n                            <img className=\"author-profile-image\" src={post.primary_author.profile_image} alt={post.primary_author.name}/> :\n                            <img className=\"default-avatar\" src=\"/images/icons/avatar.svg\" alt={post.primary_author.name}/>\n                        }\n                    </div>\n                    <span>{ post.primary_author.name }</span>\n                </div>\n                <div className=\"post-card-footer-right\">\n                    <div>{readingTime}</div>\n                </div>\n            </footer>\n        </Link>\n    )\n}\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        feature_image: PropTypes.string,\n        featured: PropTypes.bool,\n        tags: PropTypes.arrayOf(\n            PropTypes.shape({\n                name: PropTypes.string,\n            })\n        ),\n        excerpt: PropTypes.string.isRequired,\n        primary_author: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            profile_image: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n}\n\nexport default PostCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nconst Pagination = ({ pageContext }) => {\n    const { previousPagePath, nextPagePath, humanPageNumber, numberOfPages } = pageContext\n\n    return (\n        <nav className=\"pagination\" role=\"navigation\">\n            <div>\n                {previousPagePath && (\n\n                    <Link to={previousPagePath} rel=\"prev\">\n                            Previous\n                    </Link>\n\n                )}\n            </div>\n            {numberOfPages > 1 && <div className=\"pagination-location\">Page {humanPageNumber} of {numberOfPages}</div>}\n            <div>\n                {nextPagePath && (\n\n                    <Link to={nextPagePath} rel=\"next\">\n                            Next\n                    </Link>\n                )}\n            </div>\n        </nav>\n    )\n}\n\nPagination.propTypes = {\n    pageContext: PropTypes.object.isRequired,\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\n/**\n* Navigation component\n*\n* The Navigation component takes an array of your Ghost\n* navigation property that is fetched from the settings.\n* It differentiates between absolute (external) and relative link (internal).\n* You can pass it a custom class for your own styles, but it will always fallback\n* to a `site-nav-item` class.\n*\n*/\nconst Navigation = ({ data, navClass }) => (\n    <>\n        {data.map((navItem, i) => {\n            if (navItem.url.match(/^\\s?http(s?)/gi)) {\n                return <a className={navClass} href={navItem.url} key={i} target=\"_blank\" rel=\"noopener noreferrer\">{navItem.label}</a>\n            } else {\n                return <Link className={navClass} to={navItem.url} key={i}>{navItem.label}</Link>\n            }\n        })}\n    </>\n)\n\nNavigation.defaultProps = {\n    navClass: `site-nav-item`,\n}\n\nNavigation.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            label: PropTypes.string.isRequired,\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n    navClass: PropTypes.string,\n}\n\nexport default Navigation\n","export { default as Layout } from './Layout';\nexport { default as PostCard } from './PostCard';\nexport { default as Pagination } from './Pagination';\nexport { default as Navigation } from './Navigation';\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor) => {\n    let authorProfiles = []\n\n    authorProfiles.push(\n        primaryAuthor.website ? primaryAuthor.website : null,\n        primaryAuthor.twitter ? `https://twitter.com/${primaryAuthor.twitter.replace(/^@/, ``)}/` : null,\n        primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook.replace(/^\\//, ``)}/` : null\n    )\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: primaryAuthor.name || null,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: primaryAuthor.profile_image || null,\n        facebookUrl: primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook.replace(/^\\//, ``)}/` : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport config from '../../../utils/siteConfig'\n\nconst ImageMeta = ({ image }) => {\n    if (!image) {\n        return null\n    }\n\n    return (\n        <Helmet>\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            <meta name=\"twitter:image\" content={image} />\n            <meta property=\"og:image\" content={image} />\n            <meta property=\"og:image:width\" content={config.shareImageWidth} />\n            <meta property=\"og:image:height\" content={config.shareImageHeight} />\n        </Helmet >\n    )\n}\n\nImageMeta.propTypes = {\n    image: PropTypes.string,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport url from 'url'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\nimport config from '../../../utils/siteConfig'\n\nimport { tags as tagsHelper } from '@tryghost/helpers'\n\nconst ArticleMetaGhost = ({ data, settings, canonical }) => {\n    const ghostPost = data\n    settings = settings.allGhostSettings.edges[0].node\n\n    const author = getAuthorProperties(ghostPost.primary_author)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || ``\n    const shareImage = ghostPost.feature_image ? ghostPost.feature_image : _.get(settings, `cover_image`, null)\n    const publisherLogo = (settings.logo || config.siteIcon) ? url.resolve(config.siteUrl, (settings.logo || config.siteIcon)) : null\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.meta_title || ghostPost.title}</title>\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={settings.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        ghostPost.og_title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        ghostPost.og_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                {author.facebookUrl && <meta property=\"article:author\" content={author.facebookUrl} />}\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                {primaryTag && <meta name=\"twitter:label2\" content=\"Filed under\" />}\n                {primaryTag && <meta name=\"twitter:data2\" content={primaryTag} />}\n\n                {settings.twitter && <meta name=\"twitter:site\" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}\n                {settings.twitter && <meta name=\"twitter:creator\" content={settings.twitter} />}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.meta_title || ghostPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.published_at}\",\n                        \"dateModified\": \"${ghostPost.updated_at}\",\n                        ${shareImage ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },` : ``}\n                        \"publisher\": {\n                            \"@type\": \"Organization\",\n                            \"name\": \"${settings.title}\",\n                            \"logo\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${publisherLogo}\",\n                                \"width\": 60,\n                                \"height\": 60\n                            }\n                        },\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        published_at: PropTypes.string.isRequired,\n        updated_at: PropTypes.string.isRequired,\n        meta_title: PropTypes.string,\n        meta_description: PropTypes.string,\n        primary_author: PropTypes.object.isRequired,\n        feature_image: PropTypes.string,\n        tags: PropTypes.arrayOf(\n            PropTypes.shape({\n                name: PropTypes.string,\n                slug: PropTypes.string,\n                visibility: PropTypes.string,\n            })\n        ),\n        primaryTag: PropTypes.shape({\n            name: PropTypes.string,\n        }),\n        og_title: PropTypes.string,\n        og_description: PropTypes.string,\n        twitter_title: PropTypes.string,\n        twitter_description: PropTypes.string,\n        excerpt: PropTypes.string.isRequired,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nconst ArticleMetaQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettingsArticleMeta {\n                allGhostSettings {\n                    edges {\n                        node {\n                            ...GhostSettingsFields\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <ArticleMetaGhost settings={data} {...props} />}\n    />\n)\n\nexport default ArticleMetaQuery\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { StaticQuery, graphql } from 'gatsby'\nimport url from 'url'\n\nimport ImageMeta from './ImageMeta'\nimport config from '../../../utils/siteConfig'\n\nconst WebsiteMeta = ({ data, settings, canonical, title, description, image, type }) => {\n    settings = settings.allGhostSettings.edges[0].node\n\n    const publisherLogo = url.resolve(config.siteUrl, (settings.logo || config.siteIcon))\n    let shareImage = image || data.feature_image || _.get(settings, `cover_image`, null)\n\n    shareImage = shareImage ? url.resolve(config.siteUrl, shareImage) : null\n\n    description = description || data.meta_description || data.description || config.siteDescriptionMeta || settings.description\n    title = `${title || data.meta_title || data.name || data.title} - ${settings.title}`\n\n    return (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={settings.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                {settings.twitter && <meta name=\"twitter:site\" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}\n                {settings.twitter && <meta name=\"twitter:creator\" content={settings.twitter} />}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"${type}\",\n                        \"url\": \"${canonical}\",\n                        ${shareImage ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },` : ``}\n                        \"publisher\": {\n                            \"@type\": \"Organization\",\n                            \"name\": \"${settings.title}\",\n                            \"logo\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${publisherLogo}\",\n                                \"width\": 60,\n                                \"height\": 60\n                            }\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        feature_image: PropTypes.string,\n        description: PropTypes.string,\n        bio: PropTypes.string,\n        profile_image: PropTypes.string,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    type: PropTypes.oneOf([`WebSite`, `Series`]).isRequired,\n}\n\nconst WebsiteMetaQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettingsWebsiteMeta {\n                allGhostSettings {\n                    edges {\n                        node {\n                            ...GhostSettingsFields\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <WebsiteMeta settings={data} {...props} />}\n    />\n)\n\nexport default WebsiteMetaQuery\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport ImageMeta from './ImageMeta'\nimport getAuthorProperties from './getAuthorProperties'\nimport config from '../../../utils/siteConfig'\n\nconst AuthorMeta = ({ data, settings, canonical }) => {\n    settings = settings.allGhostSettings.edges[0].node\n\n    const author = getAuthorProperties(data)\n    const shareImage = author.image || _.get(settings, `cover_image`, null)\n    const title = `${data.name} - ${settings.title}`\n    const description = data.bio || config.siteDescriptionMeta || settings.description\n\n    return (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={settings.title} />\n                <meta property=\"og:type\" content=\"profile\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                {settings.twitter && <meta name=\"twitter:site\" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}\n                {settings.twitter && <meta name=\"twitter:creator\" content={settings.twitter} />}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Person\",\n                        \"name\": \"${data.name}\",\n                        ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray},` : ``}\n                        \"url\": \"${canonical}\",\n                        ${shareImage ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },` : ``}\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nAuthorMeta.propTypes = {\n    data: PropTypes.shape({\n        name: PropTypes.string,\n        bio: PropTypes.string,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nconst AuthorMetaQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettingsAuthorMeta {\n                allGhostSettings {\n                    edges {\n                        node {\n                            ...GhostSettingsFields\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <AuthorMeta settings={data} {...props} />}\n    />\n)\n\nexport default AuthorMetaQuery\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport url from 'url'\n\nimport config from '../../../utils/siteConfig'\nimport ArticleMeta from './ArticleMeta'\nimport WebsiteMeta from './WebsiteMeta'\nimport AuthorMeta from './AuthorMeta'\n\n/**\n* MetaData will generate all relevant meta data information incl.\n* JSON-LD (schema.org), Open Graph (Facebook) and Twitter properties.\n*\n*/\nconst MetaData = ({\n    data,\n    settings,\n    title,\n    description,\n    image,\n    location,\n}) => {\n    const canonical = url.resolve(config.siteUrl, location.pathname, `/`)\n    const { ghostPost, ghostTag, ghostAuthor, ghostPage } = data\n    settings = settings.allGhostSettings.edges[0].node\n\n    if (ghostPost) {\n        return (\n            <ArticleMeta\n                data={ghostPost}\n                canonical={canonical}\n            />\n        )\n    } else if (ghostTag) {\n        return (\n            <WebsiteMeta\n                data={ghostTag}\n                canonical={canonical}\n                type=\"Series\"\n            />\n        )\n    } else if (ghostAuthor) {\n        return (\n            <AuthorMeta\n                data={ghostAuthor}\n                canonical={canonical}\n            />\n        )\n    } else if (ghostPage) {\n        return (\n            <WebsiteMeta\n                data={ghostPage}\n                canonical={canonical}\n                type=\"WebSite\"\n            />\n        )\n    } else {\n        title = title || config.siteTitleMeta || settings.title\n        description = description || config.siteDescriptionMeta || settings.description\n        image = image || settings.cover_image || null\n\n        image = image ? url.resolve(config.siteUrl, image) : null\n\n        return (\n            <WebsiteMeta\n                data={{}}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type=\"WebSite\"\n            />\n        )\n    }\n}\n\nMetaData.defaultProps = {\n    data: {},\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.object,\n        ghostTag: PropTypes.object,\n        ghostAuthor: PropTypes.object,\n        ghostPage: PropTypes.object,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n}\n\nconst MetaDataQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettingsMetaData {\n                allGhostSettings {\n                    edges {\n                        node {\n                            title\n                            description\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <MetaData settings={data} {...props} />}\n    />\n)\n\nexport default MetaDataQuery\n","export { default as MetaData } from './MetaData'\n"],"sourceRoot":""}